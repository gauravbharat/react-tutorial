{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","characters","map","row","index","key","name","job","onClick","removeCharacter","Table","console","log","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,sCAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,WAAWC,KAAI,SAACC,EAAKC,GACpD,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMV,EAAMW,gBAAgBL,KAA7C,eAMR,OAAO,+BAAQL,IAiCFW,EA9BD,SAAAZ,GACZa,QAAQC,IAAI,wBAAyBd,GADhB,IAGbE,EAAmCF,EAAnCE,cAAeS,EAAoBX,EAApBW,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACET,cAAeA,EACfS,gBAAiBA,M,OCWVI,E,4MAhDbC,aAAe,CACbR,KAAM,GACNC,IAAK,I,EAGPQ,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBZ,EADc,EACdA,KAAMa,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGd,EAAOa,K,EAIZE,WAAa,WACXV,QAAQC,IAAI,qBACZ,EAAKd,MAAMwB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGX,IAAD,EACeS,KAAKR,MAAnBT,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,2BAAOiB,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHP,MAAOb,EACPqB,SAAUJ,KAAKP,eAEjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLnB,KAAK,MACLoB,GAAG,MACHP,MAAOZ,EACPoB,SAAUJ,KAAKP,eAEjB,2BAAOS,KAAK,SAASN,MAAM,SAASX,QAASe,KAAKF,kB,GA3CvCO,aCyCJC,E,4MArCbd,MAAQ,CACNd,WAAY,I,EAGdQ,gBAAkB,SAAAL,GAChBO,QAAQC,IAAI,gCAAiCR,GADpB,IAEjBH,EAAe,EAAKc,MAApBd,WAER,EAAKmB,SAAS,CACZnB,WAAYA,EAAW6B,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM5B,Q,EAKnBkB,aAAe,SAAAS,GACbpB,QAAQC,IAAI,6BAA8BmB,GAC1C,EAAKX,SAAS,CACZnB,WAAW,GAAD,mBAAM,EAAKc,MAAMd,YAAjB,CAA6B8B,O,uDAKzC,IAAM9B,EAAasB,KAAKR,MAExB,OACE,yBAAKkB,UAAU,aACb,kBAAC,EAAD,CACEjC,cAAeC,EACfQ,gBAAiBc,KAAKd,kBAExB,kBAAC,EAAD,CAAMa,aAAcC,KAAKD,oB,GAhCfM,a,MCAlBM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6efc43a0.chunk.js","sourcesContent":["import React from 'react';\n\n// Simple component\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = props => {\n  const rows = props.characterData.characters.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n\n  return <tbody>{rows}</tbody>;\n};\n\nconst Table = props => {\n  console.log('inside Table.js props', props); // TODO REMOVE\n  // Get characterData property sent from App.js\n  const { characterData, removeCharacter } = props;\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody\n        characterData={characterData}\n        removeCharacter={removeCharacter}\n      />\n    </table>\n  );\n};\n\n// class Table extends Component {\n//   render() {\n//     // Get characterData property sent from App.js\n//     const { characterData } = this.props;\n\n//     return (\n//       <table>\n//         <TableHeader />\n//         <TableBody characterData={characterData} />\n//       </table>\n//     );\n//   }\n// }\n\nexport default Table;\n","import React, { Component } from 'react';\n\nclass Form extends Component {\n  initialState = {\n    name: '',\n    job: ''\n  };\n\n  state = this.initialState;\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  submitForm = () => {\n    console.log('inside submitForm'); // TODO REMOVE\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label htmlFor='name'>Name</label>\n        <input\n          type='text'\n          name='name'\n          id='name'\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor='job'>Job</label>\n        <input\n          type='text'\n          name='job'\n          id='job'\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type='button' value='Submit' onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\n// Custom class component\nclass App extends Component {\n  state = {\n    characters: []\n  };\n\n  removeCharacter = index => {\n    console.log('inside removeCharacter App.js', index); // TODO REMOVE\n    const { characters } = this.state;\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      })\n    });\n  };\n\n  handleSubmit = character => {\n    console.log('inside handleSubmit App.js', character); // TODO REMOVE\n    this.setState({\n      characters: [...this.state.characters, character]\n    });\n  };\n\n  render() {\n    const characters = this.state;\n\n    return (\n      <div className='container'>\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}